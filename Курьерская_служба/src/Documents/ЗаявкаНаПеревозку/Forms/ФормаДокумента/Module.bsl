
&НаКлиенте
Процедура ПриОткрытии(Отказ) 
	
	Если Отказ = Истина Тогда
		Возврат;
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьПоляПоУмолчанию();
	Иначе
		ЭтаФорма.Состояние = ПолучитьПоследнееСостояние();
		Если ЗначениеЗаполнено(Объект.КомментарийНеОбоснованогоОтклонения) Тогда
			ЭтаФорма.Элементы.КомментарийНеОбоснованогоОтклонения.Видимость = Истина; 
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьВодителяИзДневнойСмены(ДатаЗаявки)
	
	Смены 		   = Справочники.РБ_Смены;
	ДневнаяСмена   = Смены.НайтиПоНаименованию("Дневная");
	
	ЗапросВодителя = Новый Запрос(
		 "ВЫБРАТЬ ПЕРВЫЕ 1
		 |	РБ_СоставСменВодителейСрезПоследних.Сотрудник 	КАК Водитель
		 |ИЗ
		 |	РегистрСведений.РБ_СоставСменВодителей.СрезПоследних КАК РБ_СоставСменВодителейСрезПоследних
		 |ГДЕ
		 |	РБ_СоставСменВодителейСрезПоследних.Активный = Истина  И Смена = &Смена
		 |	И ((&ЭтоВыходной И РБ_СоставСменВодителейСрезПоследних.Дежурный) ИЛИ (НЕ &ЭтоВыходной))
		 |"
		);
		
		ЗапросВодителя.УстановитьПараметр("Смена"	   , ДневнаяСмена);
		ЗапросВодителя.УстановитьПараметр("ЭтоВыходной", (ДеньНедели(ДатаЗаявки) = 6 ИЛИ ДеньНедели(ДатаЗаявки) = 7));
		РезультатЗапросВодителяВыполнить = ЗапросВодителя.Выполнить();
		
		Если РезультатЗапросВодителяВыполнить.Пустой() Тогда
			Возврат "";
		Иначе	
			РезультатИзмерения = РезультатЗапросВодителяВыполнить.Выбрать();
			РезультатИзмерения.Следующий();
			Возврат РезультатИзмерения.Водитель;
		КонецЕсли;
		
КонецФункции

&НаСервере
Процедура ЗаполнитьПоляПоУмолчанию()
	
	Если НЕ(ЗначениеЗаполнено(Объект.ДатаЗаявки)) Тогда 
		Объект.ДатаЗаявки   = ТекущаяДата() + 86400;	//по умолчанию заявки создаются на следующий день
	КонецЕсли;
	
	Объект.Заказчик    		= Справочники.Сотрудники.НайтиПоКоду(ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо.Код); //нужна ссылка на справочник Сотрудники 
	Объект.НачальныйАдрес	= "410012, Саратовская обл, Саратов г, Московская ул, дом № 66";							  //необходимо переделать на константу или привязаться к структурному подразделению Пользователя
	ЭтаФорма.Состояние 		= Перечисления.РБ_СостоянияЗаявокНаПеревозку.Новая;
	
	Если НЕ(ЗначениеЗаполнено(Объект.Водитель)) Тогда
		Объект.Водитель 	= ПолучитьВодителяИзДневнойСмены(Объект.ДатаЗаявки);   //+ БлюмД #3831 при заведении заявки из журнала подставлять первого водителя из смены
	КонецЕсли;	
	
	Если РольДоступна("РБ_ДобавлениеЗаявокНаПеревозку") Тогда
		ЭтаФорма.Элементы.Водитель.Доступность 				= Ложь; 
		ЭтаФорма.Элементы.ДополнительноеПоручение.Видимость = Ложь; 
		ЭтаФорма.Элементы.ОбоснованныйПростой.Видимость 	= Ложь;
	КонецЕсли;	
	
	Если РольДоступна("РБ_ПросмотрОтчетовПоЗаявкамНаПеревозку") Тогда
		ЭтаФорма.Элементы.ОбоснованныйПростой.Доступность 	= Истина; 
	КонецЕсли;	
		
	ЭтаФорма.Элементы.Состояние.Доступность 			= Ложь; 
	ЭтаФорма.Элементы.ОценкаПоездки.Видимость 			= Ложь; 
			
КонецПроцедуры

&НаСервере
Функция ПолучитьПоследнееСостояние()
	
	Отбор			   = Новый Структура("Заявка", Объект.Ссылка);
	ТекущееСостояние   = РегистрыСведений.РБ_СостоянияЗаявокНаПеревозку.ПолучитьПоследнее(,Отбор).Состояние;
	Возврат ТекущееСостояние;
	
КонецФункции

&НаКлиенте
Процедура НачальныйАдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФорматАдреса	 	 = "ФИАС";
	ПараметрыОткрытия	 = Новый Структура;
	ПараметрыОткрытия.Вставить("ОткрытаПоСценарию", "ОткрытаПоСценарию");
	ПараметрыОткрытия.Вставить("ФорматАдреса", ФорматАдреса);
	ПараметрыОткрытия.Вставить("СкрыватьНеактуальныеАдреса",        Ложь);	
	ПараметрыОткрытия.Вставить("Уровень",  1); 
	
	ОткрытьФорму("Обработка.РасширенныйВводКонтактнойИнформации.Форма.ВводАдреса", ПараметрыОткрытия, Элемент, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	

КонецПроцедуры

&НаКлиенте
Процедура КонечныйАдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФорматАдреса	 	 = "ФИАС";
	ПараметрыОткрытия	 = Новый Структура;
	ПараметрыОткрытия.Вставить("ОткрытаПоСценарию", "ОткрытаПоСценарию");
	ПараметрыОткрытия.Вставить("ФорматАдреса", ФорматАдреса);
	ПараметрыОткрытия.Вставить("СкрыватьНеактуальныеАдреса",        Ложь);	
	ПараметрыОткрытия.Вставить("Уровень",  1); 
	ОткрытьФорму("Обработка.РасширенныйВводКонтактнойИнформации.Форма.ВводАдреса", ПараметрыОткрытия, Элемент, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
		
КонецПроцедуры

&НаКлиенте
Процедура НачальныйАдресОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность   = Истина;
	ТипЗначения 	     = ТипЗнч(ВыбранноеЗначение);
	ФормироватьДетально  = Истина;
	
	Если ТипЗначения = Тип("Структура") Тогда
		Объект.НачальныйАдрес = Строка(ВыбранноеЗначение.Представление);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонечныйАдресОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность   = Истина;
	ТипЗначения 	     = ТипЗнч(ВыбранноеЗначение);
	ФормироватьДетально  = Истина;
	
	Если ТипЗначения = Тип("Структура") Тогда
		Объект.КонечныйАдрес = Строка(ВыбранноеЗначение.Представление);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если (ИмяСобытия = "Проведение_Анкета") Тогда  
		
	    АнкетаЗаполненая = Источник;
		
		Если ЗначениеЗаполнено(АнкетаЗаполненая) Тогда
								
			ДанныеЗаписи 		= Новый Структура;
			ДанныеЗаписи.Вставить("Анкета", АнкетаЗаполненая);
			Объект.Анкета 		= АнкетаЗаполненая;
			Модифицированность 	= Истина;
			
		КонецЕсли;	
				
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСостоянияДляВыбора()
	
	Отбор			   = Новый Структура("Заявка", Объект.Ссылка);
	ТекущееСостояние   = РегистрыСведений.РБ_СостоянияЗаявокНаПеревозку.ПолучитьПоследнее(,Отбор).Состояние;
	
	СписокСостоянийЗаявокНаПеревозку = Новый Массив;
	
	Если  НЕ ЗначениеЗаполнено(ТекущееСостояние)  Тогда
		
		СписокСостоянийЗаявокНаПеревозку.Добавить(Перечисления.РБ_СостоянияЗаявокНаПеревозку.Новая);	
		
	ИначеЕсли   ТекущееСостояние = Перечисления.РБ_СостоянияЗаявокНаПеревозку.Новая Тогда
		
		Если Объект.Заказчик = Справочники.Сотрудники.НайтиПоКоду(ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо.Код)  Тогда //~ БлюмД #3838 отменить заявку может и офис-менеджер если заказчиком является он сам
			СписокСостоянийЗаявокНаПеревозку.Добавить(Перечисления.РБ_СостоянияЗаявокНаПеревозку.Отменена);	
		КонецЕсли;	
		
		Если РольДоступна("РБ_ДобавлениеИзменениеЗаявокНаПеревозку") Тогда
			СписокСостоянийЗаявокНаПеревозку.Добавить(Перечисления.РБ_СостоянияЗаявокНаПеревозку.Утверждена);	
			СписокСостоянийЗаявокНаПеревозку.Добавить(Перечисления.РБ_СостоянияЗаявокНаПеревозку.Отклонена);		
		КонецЕсли;		
		 			
	ИначеЕсли  ТекущееСостояние = Перечисления.РБ_СостоянияЗаявокНаПеревозку.Отклонена Тогда	
		
		Если РольДоступна("РБ_ДобавлениеИзменениеЗаявокНаПеревозку") Тогда
			СписокСостоянийЗаявокНаПеревозку.Добавить(Перечисления.РБ_СостоянияЗаявокНаПеревозку.Утверждена);	
		КонецЕсли;			
							
	ИначеЕсли   ТекущееСостояние = Перечисления.РБ_СостоянияЗаявокНаПеревозку.Утверждена Тогда		
		
		Если Объект.Заказчик = Справочники.Сотрудники.НайтиПоКоду(ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо.Код) Тогда  //+ БлюмД #3834 состояние Исполнено/Не исполнено может выбирать только заказчик заявки
			СписокСостоянийЗаявокНаПеревозку.Добавить(Перечисления.РБ_СостоянияЗаявокНаПеревозку.Отменена);	
			СписокСостоянийЗаявокНаПеревозку.Добавить(Перечисления.РБ_СостоянияЗаявокНаПеревозку.Исполнена);	
			СписокСостоянийЗаявокНаПеревозку.Добавить(Перечисления.РБ_СостоянияЗаявокНаПеревозку.НеИсполнена);	
		КонецЕсли;	
	
	ИначеЕсли   ТекущееСостояние = Перечисления.РБ_СостоянияЗаявокНаПеревозку.Исполнена Тогда			
		
		Возврат;
		
	КонецЕсли;	
	
	// для администраторов доступы все состояния заявок
	Если РольДоступна("АдминистраторСистемы") Тогда
		СписокСостоянийЗаявокНаПеревозку.Очистить();
		СписокСостоянийЗаявокНаПеревозку.Добавить(Перечисления.РБ_СостоянияЗаявокНаПеревозку.Новая);	
		СписокСостоянийЗаявокНаПеревозку.Добавить(Перечисления.РБ_СостоянияЗаявокНаПеревозку.Утверждена);	
		СписокСостоянийЗаявокНаПеревозку.Добавить(Перечисления.РБ_СостоянияЗаявокНаПеревозку.Отменена);	
		СписокСостоянийЗаявокНаПеревозку.Добавить(Перечисления.РБ_СостоянияЗаявокНаПеревозку.Исполнена);	
		СписокСостоянийЗаявокНаПеревозку.Добавить(Перечисления.РБ_СостоянияЗаявокНаПеревозку.НеИсполнена);	
	КонецЕсли;		
		
	Элементы.Состояние.СписокВыбора.ЗагрузитьЗначения(СписокСостоянийЗаявокНаПеревозку);
	
КонецПроцедуры

&НаКлиенте
Процедура СостояниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//формируем список доступных значений перечисления в зависимости от текущего состояния
	ЗаполнитьСостоянияДляВыбора();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Отбор			   	   = Новый Структура("Заявка", Объект.Ссылка);
	ТекущееСостояние   	   = РегистрыСведений.РБ_СостоянияЗаявокНаПеревозку.ПолучитьПоследнее(,Отбор).Состояние;
	
	Если (ТекущееСостояние = Перечисления.РБ_СостоянияЗаявокНаПеревозку.Новая) И (ЭтаФорма.Состояние = ТекущееСостояние) И (ЗначениеЗаполнено(Объект.Водитель)) И (РольДоступна("РБ_ДобавлениеИзменениеЗаявокНаПеревозку")) Тогда
		ЭтаФорма.Состояние = Перечисления.РБ_СостоянияЗаявокНаПеревозку.Утверждена;	
	КонецЕсли;	
	
	Если (ЭтаФорма.Состояние  = Перечисления.РБ_СостоянияЗаявокНаПеревозку.Исполнена ИЛИ ЭтаФорма.Состояние  = Перечисления.РБ_СостоянияЗаявокНаПеревозку.НеИсполнена) Тогда 
		Если НЕ ЗначениеЗаполнено(Объект.ОценкаСтандартовКачества)
			//НЕ ЗначениеЗаполнено(Объект.ОценкаСкорости)
			//ИЛИ НЕ ЗначениеЗаполнено(Объект.ОценкаБезопасности)
			//ИЛИ НЕ ЗначениеЗаполнено(Объект.ОценкаЧистоты)
			//ИЛИ НЕ ЗначениеЗаполнено(Объект.ОценкаВежливости) 
			Тогда
			Сообщить("Заявка не закрыта. Произведите оценку качества поездки!");
			Отказ = Истина;
			Возврат;
		Иначе
			Если НЕ ЗначениеЗаполнено(Объект.ОценкаКомментарий) 
				И Объект.ОценкаСтандартовКачества > 1
				//И (Объект.ОценкаСкорости > 1
				//ИЛИ Объект.ОценкаБезопасности > 1
				//ИЛИ Объект.ОценкаЧистоты > 1
				//ИЛИ Объект.ОценкаВежливости > 1) 
				Тогда
				Сообщить("Заявка не закрыта. Необходимо указать комментарий к оценке качества поездки!");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;		
	
	//запись в регистр делать только при изменении состояния заявки на перевозку
	Если ТекущееСостояние <> ЭтаФорма.Состояние Тогда 
		РегистрыСведений.РБ_СостоянияЗаявокНаПеревозку.ОтразитьСостояниеЗаявкиНаПеревозку(ТекущийОбъект, Отказ, Состояние, ПараметрыСеанса.ТекущийПользователь);
	КонецЕсли;	
	 	 	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем Ошибки;
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Отбор			   = Новый Структура("Заявка", Объект.Ссылка);
	ТекущееСостояние   = РегистрыСведений.РБ_СостоянияЗаявокНаПеревозку.ПолучитьПоследнее(,Отбор).Состояние;
			
	Если РольДоступна("РБ_ДобавлениеЗаявокНаПеревозку") Тогда
		
		//+Блюм #3404 запрет открытия чужих заявкок 
		Если (ЗначениеЗаполнено(Объект.Заказчик)) И (Объект.Заказчик <> (Справочники.Сотрудники.НайтиПоКоду(ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо.Код))) Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки,,"Нет прав доступа",Неопределено);
			Отказ = Истина;
			Возврат;
		КонецЕсли;	
		
		//назначение водителя не доступно для заказчиков до момента утверждения заявки
		Если (ТекущееСостояние = Перечисления.РБ_СостоянияЗаявокНаПеревозку.Новая) ИЛИ (НЕ ЗначениеЗаполнено(Объект.Ссылка)) Тогда
			ЭтаФорма.Элементы.Водитель.Видимость						  = Ложь; 
		КонецЕсли;	
		
		ЭтаФорма.Элементы.Водитель.Доступность 				 			  = Ложь; 
		ЭтаФорма.Элементы.Заказчик.Доступность							  = Ложь; 
		ЭтаФорма.Элементы.ОбоснованноеОтклонение.Доступность 			  = Истина; 
		ЭтаФорма.Элементы.КомментарийНеОбоснованогоОтклонения.Доступность = Истина; // + БлюмД 26.05.2017 #3426
		ЭтаФорма.Элементы.КомментарийОфисМенеджера.Доступность 			  = Ложь;   // + БлюмД 06.07.2017 #3841
		ЭтаФорма.Элементы.ДополнительноеПоручение.Видимость 			  = Ложь; 
		ЭтаФорма.Элементы.ОбоснованныйПростой.Видимость 				  = Ложь; 
		
	ИначеЕсли РольДоступна("РБ_ДобавлениеИзменениеЗаявокНаПеревозку") Тогда
		
		Если (Объект.Заказчик <> Справочники.Сотрудники.НайтиПоКоду(ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо.Код)) И (ЗначениеЗаполнено(Объект.Ссылка)) Тогда
			ЭтаФорма.Элементы.Комментарий.Доступность 			  		  	  = Ложь;   // + БлюмД 06.07.2017 #3841
		Иначе	
			ЭтаФорма.Элементы.ОбоснованноеОтклонение.Доступность 			  = Истина; 
			ЭтаФорма.Элементы.КомментарийНеОбоснованогоОтклонения.Доступность = Истина; 
			//ЭтаФорма.Элементы.ОценкаПоездки.Доступность 					  = Истина; // + БлюмД 16.11.18
		КонецЕсли;
		ЭтаФорма.Элементы.ДополнительноеПоручение.Видимость 			  	  = Истина; // + БлюмД 16.11.18
		ЭтаФорма.Элементы.ОбоснованныйПростой.Видимость 			  	 	  = Истина; 
		
	КонецЕсли;	
	
	Если РольДоступна("РБ_ПросмотрОтчетовПоЗаявкамНаПеревозку") Тогда
		ЭтаФорма.Элементы.ОбоснованныйПростой.Доступность 			= Истина; 
	КонецЕсли;	
		
	//если заявка уже отработана, доступным оставляем только поля Фактическое время и флаг обоснованно
	Если (ТекущееСостояние = Перечисления.РБ_СостоянияЗаявокНаПеревозку.Исполнена) ИЛИ (ТекущееСостояние = Перечисления.РБ_СостоянияЗаявокНаПеревозку.НеИсполнена) ИЛИ (ТекущееСостояние = Перечисления.РБ_СостоянияЗаявокНаПеревозку.Отменена) Тогда
		
		//Блюм ДМ + #7312 возможность исправления для руководителя офис-менеджеров в течении 2 дней со дня заявки на перевозку
		Если РольДоступна("РБ_ПросмотрОтчетовПоЗаявкамНаПеревозку") = Ложь И КонецДня(Объект.ДатаЗаявки + ?(ДеньНедели(ТекущаяДата()) = 1,3,2)*24*60*60) < ТекущаяДата() Тогда     
			ЭтаФорма.Элементы.Состояние.Доступность 				= Ложь; 
			ЭтаФорма.Элементы.ВремяЗаявкиС.Доступность  			= Ложь; 
			ЭтаФорма.Элементы.ВремяЗаявкиПо.Доступность  			= Ложь; 
			ЭтаФорма.Элементы.Заказчик.Доступность 	 	       		= Ложь; 
			ЭтаФорма.Элементы.ДатаЗаявки.Доступность  				= Ложь; 
			ЭтаФорма.Элементы.Тип.Доступность 	 	       			= Ложь; 
			ЭтаФорма.Элементы.НачальныйАдрес.Доступность  			= Ложь; 
			ЭтаФорма.Элементы.КонечныйАдрес.Доступность 	 		= Ложь; 
			ЭтаФорма.Элементы.ПодразделениеКуда.Доступность  		= Ложь; 
			ЭтаФорма.Элементы.ПодразделениеОткуда.Доступность 		= Ложь; 
			ЭтаФорма.Элементы.Экстренная.Доступность 				= Ложь; 
			ЭтаФорма.Элементы.Комментарий.Доступность 				= Ложь;
			ЭтаФорма.Элементы.Водитель.Доступность 					= Ложь;
			ЭтаФорма.Элементы.ДополнительноеПоручение.Доступность	= Ложь;
			ЭтаФорма.Элементы.ОбоснованныйПростой.Доступность		= Ложь;
		КонецЕсли;	
				
		Если РольДоступна("РБ_ДобавлениеИзменениеЗаявокНаПеревозку") Тогда
			ЭтаФорма.Элементы.КомментарийОфисМенеджера.Доступность = Истина; 
		Иначе
			ЭтаФорма.Элементы.КомментарийОфисМенеджера.Доступность = Ложь; 
			//ЭтаФорма.Элементы.ОценкаПоездки.Доступность 		   = Истина; // + БлюмД 16.11.18 делаем доступной страницу ввода оценнок для просмотра
			
			// + БлюмД 16.11.18 делаем доступной страницу ввода оценнок
			ЭтаФорма.Элементы.ГруппаОценкиПоездки.Доступность 		= Истина;
			ЭтаФорма.Элементы.ОценкаСтандартовКачества.Доступность 	= Ложь;
			//ЭтаФорма.Элементы.ОценкаСкорости.Доступность 			= Ложь;
			//ЭтаФорма.Элементы.ОценкаБезопасности.Доступность 		= Ложь;
			//ЭтаФорма.Элементы.ОценкаЧистоты.Доступность 			= Ложь;
			//ЭтаФорма.Элементы.ОценкаВежливости.Доступность 		= Ложь;
			//ЭтаФорма.Элементы.ОценкаКомментарий.Доступность 		= Ложь;
								
		КонецЕсли;
		
	Иначе
			
		Если (ТекущееСостояние <> Перечисления.РБ_СостоянияЗаявокНаПеревозку.Новая) И (ЗначениеЗаполнено(Объект.ДатаЗаявки)) И РольДоступна("РБ_ДобавлениеЗаявокНаПеревозку") Тогда
			ЭтаФорма.Элементы.ВремяЗаявкиС.Доступность  		= Ложь; 
			ЭтаФорма.Элементы.ВремяЗаявкиПо.Доступность  		= Ложь; 
			ЭтаФорма.Элементы.Заказчик.Доступность 	 	       	= Ложь; 
			ЭтаФорма.Элементы.ДатаЗаявки.Доступность  			= Ложь; 
			ЭтаФорма.Элементы.Тип.Доступность 	 	       		= Ложь; 
			ЭтаФорма.Элементы.НачальныйАдрес.Доступность  		= Ложь; 
			ЭтаФорма.Элементы.КонечныйАдрес.Доступность 	 	= Ложь; 
			ЭтаФорма.Элементы.ПодразделениеКуда.Доступность  	= Ложь; 
			ЭтаФорма.Элементы.ПодразделениеОткуда.Доступность 	= Ложь; 
			ЭтаФорма.Элементы.Экстренная.Доступность 			= Ложь; 
		КонецЕсли;	
		
	КонецЕсли;	
	
	//+ БлюмД #3834 состояние Исполнено/Не исполнено может выбирать только заказчик заявки
	Если (ТекущееСостояние = Перечисления.РБ_СостоянияЗаявокНаПеревозку.Утверждена) И (Объект.Заказчик <> Справочники.Сотрудники.НайтиПоКоду(ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо.Код)) Тогда 
		ЭтаФорма.Элементы.Состояние.Доступность 				= Ложь; 
		ЭтаФорма.Элементы.Заказчик.Доступность 					= Ложь; 
		ЭтаФорма.Элементы.ОценкаПоездки.Доступность 		    = Ложь;   // + БлюмД 16.11.18
	КонецЕсли;	
	
	Если (ТекущееСостояние = Перечисления.РБ_СостоянияЗаявокНаПеревозку.НеИсполнена) ИЛИ (ТекущееСостояние = Перечисления.РБ_СостоянияЗаявокНаПеревозку.Отклонена) Тогда 
		ЭтаФорма.Элементы.ОбоснованноеОтклонение.Видимость 	    = Истина; 
		//ЭтаФорма.Элементы.ОценкаПоездки.Доступность 		    = Истина;   // + БлюмД 16.11.18
	КонецЕсли;		
	
	//формирование истории изменений состояний заявки на перевозку
	СостоянияЗаявокНаПеревозку = РегистрыСведений.РБ_СостоянияЗаявокНаПеревозку;
	Отбор					   = Новый Структура("Заявка", Объект.Ссылка);
	ВыборкаСостояний 		   = СостоянияЗаявокНаПеревозку.Выбрать(,,Отбор);
	
	Пока ВыборкаСостояний.Следующий() Цикл
		
		НоваяСтрока 			   = ЭтотОбъект.ИсторияСостояний.Добавить();
		НоваяСтрока.ДатаИзменения  = ВыборкаСостояний.Период;
		НоваяСтрока.Состояние 	   = ВыборкаСостояний.Состояние;
		НоваяСтрока.АвторИзменения = ВыборкаСостояний.АвторИзменения;
						
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьПраваДоступа()
		
	Если РольДоступна("АдминистраторСистемы") ИЛИ РольДоступна("РБ_ДобавлениеИзменениеЗаявокНаПеревозку") Тогда
	 	Возврат "АдминистраторСистемы";
	Иначе	
		Возврат 0;
	КонецЕсли;	
		
КонецФункции	

&НаКлиенте
Процедура СостояниеПриИзменении(Элемент)
	
	Если (Элемент.ВыделенныйТекст = "Не исполнена") ИЛИ (Элемент.ВыделенныйТекст = "Отклонена") Тогда 
		ЭтаФорма.Элементы.ОбоснованноеОтклонение.Видимость = Истина; 
		Объект.ОбоснованноеОтклонение 					   = Истина;
	Иначе
		ЭтаФорма.Элементы.ОбоснованноеОтклонение.Видимость = Ложь; 
	КонецЕсли;	
	
	//Если (Элемент.ВыделенныйТекст = "Не исполнена") ИЛИ (Элемент.ВыделенныйТекст = "Исполнена") Тогда 
	//	ЭтаФорма.Элементы.ОценкаПоездки.Доступность = Истина; 
	//	ЭтаФорма.Элементы.ОценкаПоездки.Видимость 	= Истина; 
	//Иначе
	//	ЭтаФорма.Элементы.ОценкаПоездки.Доступность = Ложь; 
	//	ЭтаФорма.Элементы.ОценкаПоездки.Видимость 	= Ложь; 
	//КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ЭтаФорма.Закрыть();
	Оповестить("ОбновитьФормуПланировщика");     //+ БлюмД #3332 
		
КонецПроцедуры

&НаКлиенте
Процедура ВремяЗаявкиСПриИзменении(Элемент)
	
	ЭтотОбъект.Объект.ВремяЗаявкиС = Дата(Лев(НачалоДня(ЭтотОбъект.Объект.ДатаЗаявки),11) + Прав(ЭтотОбъект.Объект.ВремяЗаявкиС,8));
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяЗаявкиПоПриИзменении(Элемент)
	
	ЭтотОбъект.Объект.ВремяЗаявкиПо = Дата(Лев(НачалоДня(ЭтотОбъект.Объект.ДатаЗаявки),11) + Прав(ЭтотОбъект.Объект.ВремяЗаявкиПо,8));
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РегистрыСведений.РБ_СостоянияЗаявокНаПеревозку.ОтразитьСостояниеЗаявкиНаПеревозку(ЭтотОбъект, Отказ, Состояние);
	 
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если РольДоступна("АдминистраторСистемы") Тогда
		Отказ = Ложь;
		Возврат;
	КонецЕсли;	
		
	Отбор			   = Новый Структура("Заявка", Объект.Ссылка);
	ТекущееСостояние   = РегистрыСведений.РБ_СостоянияЗаявокНаПеревозку.ПолучитьПоследнее(,Отбор).Состояние;
	
	//+БлюмД 26.05.2017 #3424 проверка обязательных для заполнения реквизитов
	Если (Не ЗначениеЗаполнено(Объект.ВремяЗаявкиС)) ИЛИ (Не ЗначениеЗаполнено(Объект.ВремяЗаявкиПо)) ИЛИ ((Прав(Объект.ВремяЗаявкиС,8) = " 0:00:00") ИЛИ (Прав(Объект.ВремяЗаявкиПо,8) = " 0:00:00")) Тогда
		Сообщить("Укажите время совершения поездки.");
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
			
	Если РольДоступна("РБ_ДобавлениеИзменениеЗаявокНаПеревозку") Тогда
		//+БлюмД 29.07.2017 офис менеджеры могут создавать обычные заявки до 10 утра текущего дня
		Если (НЕ ЗначениеЗаполнено(Объект.Ссылка)) И (Объект.Экстренная = Ложь) И ((НачалоДня(ТекущаяДата()) = НачалоДня(Объект.ДатаЗаявки)) И (ТекущаяДата() > НачалоДня(ТекущаяДата()) + 36000)) Тогда 
			Сообщить("Измените дату заявки на более позднюю или установите флаг экстренности!");
			Отказ = Истина;
			Возврат;
		КонецЕсли;	
	Иначе
		//+БлюмД 26.05.2017 #3399 запрет создания обычных заявок после 19:00
		Если (НЕ ЗначениеЗаполнено(Объект.Ссылка)) И (Объект.Экстренная = Ложь) И ((НачалоДня(ТекущаяДата()) = НачалоДня(Объект.ДатаЗаявки)) ИЛИ (ТекущаяДата() > НачалоДня(ТекущаяДата()) + 68400)) Тогда 
			Если Объект.ДатаЗаявки < НачалоДня(ТекущаяДата()) + 48 * 3600 Тогда
				Сообщить("Измените дату заявки на более позднюю или установите флаг экстренности!");
				Отказ = Истина;
				Возврат;
			КонецЕсли;		
		КонецЕсли;	
	КонецЕсли;		
	
	//+БлюмД 26.05.2017 #3424 проверка обязательных для заполнения реквизитов
	Если (Объект.Экстренная = Истина) И (Не ЗначениеЗаполнено(Объект.Комментарий)) Тогда
		Сообщить("При указании экстренности заявки заполните комментарий.");
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	
	//Отклоняет заявку только ОМ, ему обязательно заполнение поля КомментарийОфисменеджера
	Если (ЭтаФорма.Состояние = Перечисления.РБ_СостоянияЗаявокНаПеревозку.Отклонена) И (Не ЗначениеЗаполнено(Объект.КомментарийОфисМенеджера)) Тогда
		Сообщить("Поле комментарий офис-менеджера обязательно для заполнения!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	
	//Отменяет заявку только Заказчик, ему обязательно заполнение поля Комментарий
	Если (ЭтаФорма.Состояние = Перечисления.РБ_СостоянияЗаявокНаПеревозку.Отменена) И (Не ЗначениеЗаполнено(Объект.Комментарий)) Тогда
		Сообщить("Поле комментарий заказчика обязательно для заполнения!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	
	Если (ЭтаФорма.Состояние = Перечисления.РБ_СостоянияЗаявокНаПеревозку.НеИсполнена) И (Не ЗначениеЗаполнено(Объект.Комментарий)) Тогда
		Сообщить("Поле комментария обязательно для заполнения! Опишите причины не исполнения заявки и укажите обосновано или нет!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	
	Если (ТекущееСостояние = Перечисления.РБ_СостоянияЗаявокНаПеревозку.Отклонена)  И (Объект.ОбоснованноеОтклонение = Ложь) И (Не ЗначениеЗаполнено(Объект.КомментарийНеОбоснованогоОтклонения)) Тогда
		Сообщить("Поле комментария не обоснованного отклонения обязателен для заполнения!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	
	Если ((Не ЗначениеЗаполнено(Объект.КонечныйАдрес)) И (Не ЗначениеЗаполнено(Объект.ПодразделениеКуда))) Тогда
		Сообщить("Заполните маршрут поездки (поля адресов или подразделения)");
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(Объект.Тип) Тогда
		Сообщить("Заполните тип поездки");
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	
	Если (ТекущееСостояние = Перечисления.РБ_СостоянияЗаявокНаПеревозку.Новая) И (Не(ЗначениеЗаполнено(Объект.Водитель))) И (РольДоступна("РБ_ДобавлениеИзменениеЗаявокНаПеревозку")) Тогда
		Сообщить("Укажите водителя!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;		
		
	//+ БлюмД #3490 нельзя создавать новою заявку пока не закрыта предыдущая заявка этого же заказчика
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И (НЕ(РольДоступна("РБ_ДобавлениеИзменениеЗаявокНаПеревозку"))) Тогда
		ЗапросЗаявок = Новый Запрос(
			 "ВЫБРАТЬ
			 |	РБ_СостоянияЗаявокНаПеревозкуСрезПоследних.Заявка 			КАК Заявка,
			 |	РБ_СостоянияЗаявокНаПеревозкуСрезПоследних.Заявка.Заказчик  КАК ЗаявкаЗаказчик,
			 |	РБ_СостоянияЗаявокНаПеревозкуСрезПоследних.Состояние 		КАК Состояние
			 |ИЗ
			 |	РегистрСведений.РБ_СостоянияЗаявокНаПеревозку.СрезПоследних КАК РБ_СостоянияЗаявокНаПеревозкуСрезПоследних
			 |ГДЕ
			 |	РБ_СостоянияЗаявокНаПеревозкуСрезПоследних.Заявка.Заказчик = &Заказчик
			 |	И РБ_СостоянияЗаявокНаПеревозкуСрезПоследних.Заявка.ПометкаУдаления = Ложь 
			 |	И РБ_СостоянияЗаявокНаПеревозкуСрезПоследних.Заявка <> &Заявка
			 |	И (РБ_СостоянияЗаявокНаПеревозкуСрезПоследних.Состояние = &СостояниеУтверждена 
			 |	ИЛИ РБ_СостоянияЗаявокНаПеревозкуСрезПоследних.Состояние = &СостояниеНовая)
			 |  И РБ_СостоянияЗаявокНаПеревозкуСрезПоследних.Заявка.ДатаЗаявки < &ДатаНачалаОграничения"
		);
		      			
		ЗапросЗаявок.УстановитьПараметр("Заказчик"				, Объект.Заказчик);
		ЗапросЗаявок.УстановитьПараметр("Заявка"				, Объект.Ссылка);
		ЗапросЗаявок.УстановитьПараметр("СостояниеУтверждена"	, Перечисления.РБ_СостоянияЗаявокНаПеревозку.Утверждена);
		ЗапросЗаявок.УстановитьПараметр("СостояниеНовая"		, Перечисления.РБ_СостоянияЗаявокНаПеревозку.Новая);
		ЗапросЗаявок.УстановитьПараметр("ДатаНачалаОграничения"	, НачалоДня(ТекущаяДата())); // + БлюмД 21.06.2017 #3686 проверка только для открытых заявок задним числом
		РезультатЗапросаЗаявокВыполнить = ЗапросЗаявок.Выполнить();
		
		Если РезультатЗапросаЗаявокВыполнить.Пустой() = Ложь Тогда
			Сообщить("Есть не завершенные заявки, создавать новые запрещено!");
			
			//РезультатИзмерения = РезультатЗапросаЗаявокВыполнить.Выбрать();
			//Пока РезультатИзмерения.Следующий() Цикл
			//	Сообщить(РезультатИзмерения.Заявка);	
			//КонецЦикла;
						
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;	
			
КонецПроцедуры

&НаКлиенте
Процедура ОбоснованноеОтклонениеПриИзменении(Элемент)
	
	//+ БлюмД 26.05.2017 #3426   
	Если ЭтаФорма.Объект.ОбоснованноеОтклонение = Ложь Тогда
		
		ЭтаФорма.Элементы.КомментарийНеОбоснованогоОтклонения.Видимость = Истина; 
		
	Иначе
			
		Если ЗначениеЗаполнено(ЭтаФорма.Объект.КомментарийНеОбоснованогоОтклонения) Тогда
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Вопрос(НСтр("ru = 'Поле комментария не обосновонного отклонения будет очищено, продолжить?';"), Режим, 0);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
			    Возврат;
			КонецЕсли;
			
			ЭтаФорма.Объект.КомментарийНеОбоснованогоОтклонения = "";
			
		КонецЕсли;		
		
		ЭтаФорма.Элементы.КомментарийНеОбоснованогоОтклонения.Видимость = Ложь; 	
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаЗаявкиПриИзменении(Элемент)
	
	//возможность вносить заявки задним числом Администраторам
	ПраваАдминистратора = ПроверитьПраваДоступа();
	Если (ПраваАдминистратора <> "АдминистраторСистемы") Тогда
		
		Если ЭтотОбъект.Объект.ДатаЗаявки < НачалоДня(ТекущаяДата()) Тогда
			ЭтотОбъект.Объект.ДатаЗаявки = НачалоДня(ТекущаяДата());
			Сообщить("Нельзя вводить заявки задним числом");
		КонецЕсли;	
		
	КонецЕсли;		
	
	ЭтотОбъект.Объект.ВремяЗаявкиС  = Дата(Лев(НачалоДня(ЭтотОбъект.Объект.ДатаЗаявки),11) + Прав(ЭтотОбъект.Объект.ВремяЗаявкиС,8));
	ЭтотОбъект.Объект.ВремяЗаявкиПо = Дата(Лев(НачалоДня(ЭтотОбъект.Объект.ДатаЗаявки),11) + Прав(ЭтотОбъект.Объект.ВремяЗаявкиПо,8));
	
КонецПроцедуры

&НаСервере
Функция ПолучитьАдресПодразделения(ВыбранноеПодразделение)
	
	//ОбъектПодразделение = ВыбранноеПодразделение.ПолучитьОбъект();
	Возврат УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ВыбранноеПодразделение,Справочники.ВидыКонтактнойИнформации.РБ_АдресПодразделения);
	
КонецФункции

&НаКлиенте
Процедура ПодразделениеОткудаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	АдресПодразделения = ПолучитьАдресПодразделения(ВыбранноеЗначение);
	
	Если Не (ЗначениеЗаполнено(АдресПодразделения)) Тогда
		Сообщить("В карточке подразделения не указан адрес!");
	КонецЕсли;	
	
	Объект.НачальныйАдрес = АдресПодразделения;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеКудаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	АдресПодразделения  = ПолучитьАдресПодразделения(ВыбранноеЗначение);
	
	Если Не (ЗначениеЗаполнено(АдресПодразделения)) Тогда
		Сообщить("В карточке подразделения не указан адрес!");
	КонецЕсли;	
	
	Объект.КонечныйАдрес = АдресПодразделения;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьШаблонАнкеты()
	
	Возврат Константы.РБ_ШаблонАнкетыОценкиПоездки.Получить();
	
КонецФункции //ПолучитьШаблонАнкеты()	

&НаСервере
Функция ПолучитьОпрос()
	
	Возврат Константы.РБ_ОпросОценкиПоездки.Получить();
		
КонецФункции //ПолучитьОпрос()	

&НаСервере
Функция ПолучитьОпросПеревозкиГрузов()
	
	Возврат Константы.РБ_ОпросОценкиПеревозкиГрузов.Получить();
		
КонецФункции //ПолучитьОпросПеревозкиГрузов()	

&НаСервере
Функция ПолучитьШаблонАнкетыПеревозкиГрузов()
	
	Возврат Константы.РБ_ШаблонАнкетыОценкиПеревозкиГрузов.Получить();
	
КонецФункции //ПолучитьШаблонАнкетыПеревозкиГрузов()	

&НаСервере
Функция ПолучитьТекущегоПользователя()
	
	Возврат ПараметрыСеанса.ТекущийПользователь;
	
КонецФункции //ПолучитьТекущегоПользователя()

&НаКлиенте
Процедура ВызовАнкетирования(Форма,Команда)
	
	#Область ОпределениеШаблонаИВидаАнкеты
	Если ЭтаФорма.Объект.Тип = ПредопределенноеЗначение("Перечисление.РБ_ТипыЗаявокНаПеревозку.Пассажиры") Тогда
		ШаблонАнкеты 		= ПолучитьШаблонАнкеты();
		Опрос 				= ПолучитьОпрос();
	Иначе
		ШаблонАнкеты 		= ПолучитьШаблонАнкетыПеревозкиГрузов();
		Опрос 				= ПолучитьОпросПеревозкиГрузов();
	КонецЕсли;	
	
	ТекущийПользовательРеспондент 	= ПолучитьТекущегоПользователя();
		
	Если ШаблонАнкеты = ПредопределенноеЗначение("Справочник.ШаблоныАнкет.ПустаяСсылка") ИЛИ Опрос = ПредопределенноеЗначение("Документ.НазначениеОпросов.ПустаяСсылка") Тогда
		Сообщить("Не задан шаблон анкеты или назначенный опрос. Продолжение невозможно!");
		Возврат;
	КонецЕсли;
		
	#КонецОбласти
	
	Если Объект.Анкета.Пустая() Тогда	
		//создание новой анкеты
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("Респондент", ТекущийПользовательРеспондент);
		ЗначенияЗаполнения.Вставить("ШаблонАнкеты", ШаблонАнкеты);
		ЗначенияЗаполнения.Вставить("Опрос", Опрос);
		ЗначенияЗаполнения.Вставить("РедактируемыйРаздел", "Раздел");
		ЗначенияЗаполнения.Вставить("РежимАнкетирования", ПредопределенноеЗначение("Перечисление.РежимыАнкетирования.Анкета"));
	
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		ПараметрыФормы.Вставить("ВозможностьПредварительногоСохранения", Ложь);
		ПараметрыФормы.Вставить("ТолькоФормаЗаполнения", Истина);
		
		ОткрытьФорму("Документ.Анкета.ФормаОбъекта", ПараметрыФормы, ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
				
	Иначе
		//редактирование анкеты
		//ПараметрыФормы = Новый Структура;
		//ПараметрыФормы.Вставить("Ключ", Объект.Анкета);
		//ПараметрыФормы.Вставить("ВозможностьПредварительногоСохранения", Истина);
		//ПараметрыФормы.Вставить("ТолькоФормаЗаполнения", Истина);
		
		//ОткрытьФорму("Документ.Анкета.ФормаОбъекта", ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
		ПоказатьЗначение(,Объект.Анкета);
	КонецЕсли;
		
КонецПроцедуры
